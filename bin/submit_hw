#!/usr/bin/env ruby

# require Gem dependencies
if ARGV[0] == "-e" && ARGV[1].downcase == "development"
  puts "(running in development mode...)"
  Bundler.require(:default, :development)
else
  Bundler.require(:default)
end

# require standard libraries
require 'json'
require 'yaml'
require 'io/console'

# TODO (phlco) remove Hub dependency and use github gem/api directly

unless ENV['HUMAN_NAME']
  puts "Please enter your full name (first and last)" # we could say lowercase here.
  human_name = gets.chomp.strip.downcase.gsub(' ', '_')
  system("export HUMAN_NAME=#{human_name}")
  system("echo '\nexport HUMAN_NAME=#{human_name}\n' >> ~/.bash_profile")
end

unless File.exists? File.expand_path(".config/hub","~")
  puts "You haven't used the GitHub API with Hub before."
  puts "We need your credentials (one time)."
  print "Please enter your GitHub username: "
  username = gets.chomp
  print "Please enter your GitHub password: "
  password = $stdin.noecho(&:gets).chomp
  puts

  client = Octokit::Client.new \
    :login    => username,
    :password => password

  begin
    client.user # check for bad auth and fail
  rescue
    puts "Authentication error. Check your username and password."
    exit(false)
  end

  # add random nuber to token name to allow multiple tokens
  random_number = (Random.rand * 10000).to_i

  response = client.create_authorization \
    :scopes => ["user","repo"],
    :note => "hub token added by submit_hw [#{random_number}]"

  hub_config = {
    "github.com" => [
      {
        "oauth_token" => response[:token],
        "user"        => username
      }
    ]
  }.to_yaml

  # ensure ~/.config exists
  FileUtils.mkdir_p File.expand_path(".config","~")

  File.write(File.expand_path(".config/hub","~"), hub_config)
end

def prompt_to_reload
  puts "WARNING: this script changed your ~/.bash_profile file." + \
       " When possible immediately run the following command:".yellow
  puts " $ reload"
  puts "or, if that fails:".yellow
  puts " $ source ~/.bash_profile"
end

def exit_script
  prompt_to_reload unless ENV['HUMAN_NAME']
  exit(false)
end

data = {}

print "\nHow many parts of the homework did you finish? "
data["completeness"] = gets

begin
  data["completeness"] = Integer(data["completeness"])
  raise ArgumentError if data["completeness"] < 0
rescue ArgumentError
  puts "Invalid: not an integer (0 or greater)".red
  exit_script
end

print "Comfortability [1 - 3]? "
data["comfortability"] = gets.gsub(/\W+/, '').to_i

unless (1..5).member?(data["comfortability"])
  puts "Invalid numbers (only 1 - 3)".red
  exit_script
end

# github_name  = `git config --get user.name`.strip
github_name = ENV['HUMAN_NAME'] || human_name

puts "Pushing your work to your fork.\n".green
`git push origin master`
puts

begin
  upstream = `git config --get remote.upstream.url`.strip.match(/:(.*)\.git/).captures.first
rescue NoMethodError
  # Upstream has not been set
  puts "You haven't configured a remote that points to the upstream repository!".red
  puts "Run the following then try again:".red
  puts " $ git remote add upstream CLASS_REPO_SSH_URL"
  exit_script
end

reconstituted_name = github_name.split('_').map(&:capitalize).join(' ')
branch       = "#{upstream}:#{github_name}"
submitted_at = Time.now.strftime("%H:%m")
submitted_on = Time.now.strftime('%Y-%m-%d')
message      = "HW for #{reconstituted_name}: #{submitted_on} at #{submitted_at}\n\n#{data.to_json}"

submission = `hub pull-request -m '#{message}' -b '#{branch}' 2>&1` # print to STDOUT

# puts submission

if submission.include? "pull request already exists"
  puts "You already have an outstanding pull request which the instructors have yet to merge! Have a great day.".yellow
elsif submission.include? "Error creating pull request: Internal Server Error (HTTP 500)"
  puts "We may not have an upstream branch for you yet. Contact your Instructors!".yellow
elsif submission.include? "No commits between"
  # NOTE: (phlco) we'll ignore this for now becuase we probably won't get this error.
  puts "You haven't commited any changes.".red
else
  puts "Thanks for submitting your homework.".green
end

prompt_to_reload unless ENV['HUMAN_NAME']
